The struct.Struct class23 converts between Python values and C
structs serialized into Python bytes objects.

For example, it can be
used to handle binary data stored in files or coming in from network
connections.

Serialized structs are seldom used to represent data objects meant to
be handled purely inside Python code.

They’re intended primarily as a
data exchange format, rather than as a way of holding data in memory
that’s only used by Python code.
-----------------------------------------------------------------
>>> from struct import Struct
>>> MyStruct = Struct('i?f')
>>> data = MyStruct.pack(23, False, 42.0)

# All you get is a blob of data:
>>> data
b'x17x00x00x00x00x00x00x00x00x00(B'
# Data blobs can be unpacked again:
>>> MyStruct.unpack(data)
(23, False, 42.0)
-----------------------------------------------------------------